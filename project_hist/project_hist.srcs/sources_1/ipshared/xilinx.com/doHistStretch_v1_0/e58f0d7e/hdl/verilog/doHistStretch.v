// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="doHistStretch,hls_ip_2014_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.133000,HLS_SYN_LAT=76832,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module doHistStretch (
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        inStream_TDATA,
        inStream_TVALID,
        inStream_TREADY,
        inStream_TKEEP,
        inStream_TSTRB,
        inStream_TUSER,
        inStream_TLAST,
        inStream_TID,
        inStream_TDEST,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TREADY,
        outStream_TKEEP,
        outStream_TSTRB,
        outStream_TUSER,
        outStream_TLAST,
        outStream_TID,
        outStream_TDEST,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b000;
parameter    ap_ST_st2_fsm_1 = 3'b1;
parameter    ap_ST_st3_fsm_2 = 3'b10;
parameter    ap_ST_st4_fsm_3 = 3'b11;
parameter    ap_ST_st5_fsm_4 = 3'b100;
parameter    ap_ST_st6_fsm_5 = 3'b101;
parameter    ap_ST_pp0_stg0_fsm_6 = 3'b110;
parameter    ap_ST_st34_fsm_7 = 3'b111;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 6;
parameter    C_DATA_WIDTH = 32;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv32_437F0000 = 32'b1000011011111110000000000000000;
parameter    ap_const_lv17_12C00 = 17'b10010110000000000;
parameter    ap_const_lv17_1 = 17'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (C_S_AXI_CRTL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter    C_WSTRB_WIDTH = (C_DATA_WIDTH / ap_const_int64_8);

input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1 : 0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1 : 0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
input  [7:0] inStream_TDATA;
input   inStream_TVALID;
output   inStream_TREADY;
input  [0:0] inStream_TKEEP;
input  [0:0] inStream_TSTRB;
input  [1:0] inStream_TUSER;
input  [0:0] inStream_TLAST;
input  [4:0] inStream_TID;
input  [5:0] inStream_TDEST;
output  [7:0] outStream_TDATA;
output   outStream_TVALID;
input   outStream_TREADY;
output  [0:0] outStream_TKEEP;
output  [0:0] outStream_TSTRB;
output  [1:0] outStream_TUSER;
output  [0:0] outStream_TLAST;
output  [4:0] outStream_TID;
output  [5:0] outStream_TDEST;
output   interrupt;

reg inStream_TREADY;
reg outStream_TVALID;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
reg   [2:0] ap_CS_fsm = 3'b000;
reg    ap_ready;
wire   [7:0] xMin;
wire   [7:0] xMax;
wire    doHistStretch_CRTL_BUS_s_axi_U_ap_dummy_ce;
reg   [16:0] idxPixel_reg_153;
wire   [8:0] tmp_cast_fu_177_p1;
reg   [8:0] tmp_cast_reg_360;
wire   [31:0] xMax_minus_xMin7_fu_191_p1;
wire   [31:0] grp_fu_174_p1;
reg   [31:0] xMax_minus_xMin_reg_370;
wire   [0:0] exitcond_fu_196_p2;
reg   [0:0] exitcond_reg_375;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_102;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_reg_ppiten_pp0_it12 = 1'b0;
reg    ap_reg_ppiten_pp0_it13 = 1'b0;
reg    ap_reg_ppiten_pp0_it14 = 1'b0;
reg    ap_reg_ppiten_pp0_it15 = 1'b0;
reg    ap_reg_ppiten_pp0_it16 = 1'b0;
reg    ap_reg_ppiten_pp0_it17 = 1'b0;
reg    ap_reg_ppiten_pp0_it18 = 1'b0;
reg    ap_reg_ppiten_pp0_it19 = 1'b0;
reg    ap_reg_ppiten_pp0_it20 = 1'b0;
reg    ap_reg_ppiten_pp0_it21 = 1'b0;
reg    ap_reg_ppiten_pp0_it22 = 1'b0;
reg    ap_reg_ppiten_pp0_it23 = 1'b0;
reg    ap_reg_ppiten_pp0_it24 = 1'b0;
reg    ap_reg_ppiten_pp0_it25 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it25;
reg    ap_sig_ioackin_outStream_TREADY;
reg    ap_reg_ppiten_pp0_it26 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it6;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it7;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it9;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it10;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it11;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it12;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it13;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it14;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it15;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it16;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it17;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it18;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it19;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it20;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it21;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it22;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it23;
reg   [0:0] ap_reg_ppstg_exitcond_reg_375_pp0_it24;
wire   [16:0] idxPixel_1_fu_202_p2;
reg   [0:0] tmp_keep_V_reg_384;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it4;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it5;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it6;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it7;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it8;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it9;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it10;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it11;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it12;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it13;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it14;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it15;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it16;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it17;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it18;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it19;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it20;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it21;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it22;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it23;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it24;
reg   [0:0] ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it25;
reg   [0:0] tmp_strb_V_reg_389;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it4;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it5;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it6;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it7;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it8;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it9;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it10;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it11;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it12;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it13;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it14;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it15;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it16;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it17;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it18;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it19;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it20;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it21;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it22;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it23;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it24;
reg   [0:0] ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it25;
reg   [1:0] tmp_user_V_reg_394;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it1;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it2;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it3;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it4;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it5;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it6;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it7;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it8;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it9;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it10;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it11;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it12;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it13;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it14;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it15;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it16;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it17;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it18;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it19;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it20;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it21;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it22;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it23;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it24;
reg   [1:0] ap_reg_ppstg_tmp_user_V_reg_394_pp0_it25;
reg   [0:0] tmp_last_V_reg_399;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it2;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it3;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it4;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it5;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it6;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it7;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it8;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it9;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it10;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it11;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it12;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it13;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it14;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it15;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it16;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it17;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it18;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it19;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it20;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it21;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it22;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it23;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it24;
reg   [0:0] ap_reg_ppstg_tmp_last_V_reg_399_pp0_it25;
reg   [4:0] tmp_id_V_reg_404;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it1;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it2;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it3;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it4;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it5;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it6;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it7;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it8;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it9;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it10;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it11;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it12;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it13;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it14;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it15;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it16;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it17;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it18;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it19;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it20;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it21;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it22;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it23;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it24;
reg   [4:0] ap_reg_ppstg_tmp_id_V_reg_404_pp0_it25;
reg   [5:0] tmp_dest_V_reg_409;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it1;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it2;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it3;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it4;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it5;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it6;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it7;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it8;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it9;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it10;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it11;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it12;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it13;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it14;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it15;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it16;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it17;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it18;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it19;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it20;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it21;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it22;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it23;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it24;
reg   [5:0] ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it25;
wire   [31:0] tmp_s_fu_245_p1;
reg   [31:0] tmp_6_reg_419;
wire   [31:0] grp_fu_170_p2;
reg   [31:0] tmp_7_reg_424;
reg   [7:0] loc_V_reg_429;
wire   [22:0] loc_V_1_fu_264_p1;
reg   [22:0] loc_V_1_reg_435;
reg    ap_reg_ioackin_outStream_TREADY = 1'b0;
wire   [31:0] grp_fu_165_p0;
wire   [31:0] grp_fu_165_p1;
wire   [31:0] grp_fu_170_p0;
wire   [31:0] grp_fu_170_p1;
reg   [31:0] grp_fu_174_p0;
wire   [8:0] tmp_1_cast_fu_181_p1;
wire   [8:0] tmp_2_fu_185_p2;
wire   [8:0] tmp_4_cast_fu_236_p1;
wire   [8:0] tmp_5_fu_240_p2;
wire   [31:0] grp_fu_165_p2;
wire   [31:0] p_Val2_s_fu_250_p1;
wire   [23:0] p_Result_s_fu_268_p3;
wire   [8:0] tmp_i_i_i_cast1_fu_279_p1;
wire   [8:0] sh_assign_fu_282_p2;
wire   [7:0] tmp_1_i_i_fu_296_p2;
wire   [0:0] isNeg_fu_288_p3;
wire   [8:0] sh_assign_1_fu_305_p1;
wire   [8:0] sh_assign_1_fu_305_p3;
wire   [31:0] tmp_2_i_i_fu_321_p0;
wire   [23:0] tmp_3_i_i_fu_325_p1;
wire   [23:0] tmp_3_i_i_fu_325_p2;
wire   [53:0] tmp_i_i_fu_275_p1;
wire   [53:0] tmp_2_i_i_fu_321_p1;
wire   [53:0] tmp_3_i_i_cast_fu_331_p1;
wire   [53:0] tmp_5_i_i_fu_335_p2;
wire   [53:0] p_Val2_3_fu_341_p3;
reg    doHistStretch_ap_rst;
reg    grp_fu_165_ce;
reg    grp_fu_170_ce;
reg    grp_fu_174_ce;
reg   [2:0] ap_NS_fsm;


doHistStretch_CRTL_BUS_s_axi #(
    .C_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
doHistStretch_CRTL_BUS_s_axi_U(
    .AWVALID( s_axi_CRTL_BUS_AWVALID ),
    .AWREADY( s_axi_CRTL_BUS_AWREADY ),
    .AWADDR( s_axi_CRTL_BUS_AWADDR ),
    .WVALID( s_axi_CRTL_BUS_WVALID ),
    .WREADY( s_axi_CRTL_BUS_WREADY ),
    .WDATA( s_axi_CRTL_BUS_WDATA ),
    .WSTRB( s_axi_CRTL_BUS_WSTRB ),
    .ARVALID( s_axi_CRTL_BUS_ARVALID ),
    .ARREADY( s_axi_CRTL_BUS_ARREADY ),
    .ARADDR( s_axi_CRTL_BUS_ARADDR ),
    .RVALID( s_axi_CRTL_BUS_RVALID ),
    .RREADY( s_axi_CRTL_BUS_RREADY ),
    .RDATA( s_axi_CRTL_BUS_RDATA ),
    .RRESP( s_axi_CRTL_BUS_RRESP ),
    .BVALID( s_axi_CRTL_BUS_BVALID ),
    .BREADY( s_axi_CRTL_BUS_BREADY ),
    .BRESP( s_axi_CRTL_BUS_BRESP ),
    .ACLK( ap_clk ),
    .ARESETN( ap_rst_n ),
    .ACLK_EN( doHistStretch_CRTL_BUS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .xMin( xMin ),
    .xMax( xMax )
);

doHistStretch_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 0 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
doHistStretch_fmul_32ns_32ns_32_4_max_dsp_U0(
    .clk( ap_clk ),
    .reset( doHistStretch_ap_rst ),
    .din0( grp_fu_165_p0 ),
    .din1( grp_fu_165_p1 ),
    .ce( grp_fu_165_ce ),
    .dout( grp_fu_165_p2 )
);

doHistStretch_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
doHistStretch_fdiv_32ns_32ns_32_16_U1(
    .clk( ap_clk ),
    .reset( doHistStretch_ap_rst ),
    .din0( grp_fu_170_p0 ),
    .din1( grp_fu_170_p1 ),
    .ce( grp_fu_170_ce ),
    .dout( grp_fu_170_p2 )
);

doHistStretch_sitofp_32s_32_6 #(
    .ID( 2 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
doHistStretch_sitofp_32s_32_6_U2(
    .clk( ap_clk ),
    .reset( doHistStretch_ap_rst ),
    .din0( grp_fu_174_p0 ),
    .ce( grp_fu_174_ce ),
    .dout( grp_fu_174_p1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n == 1'b0) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ioackin_outStream_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_outStream_TREADY
    if (ap_rst_n == 1'b0) begin
        ap_reg_ioackin_outStream_TREADY <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ioackin_outStream_TREADY <= ap_const_logic_0;
        end else if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) & (ap_const_logic_1 == outStream_TREADY))) begin
            ap_reg_ioackin_outStream_TREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))) & ~(exitcond_fu_196_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (exitcond_fu_196_p2 == ap_const_lv1_0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_ST_st6_fsm_5 == ap_CS_fsm) | ((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))) & ~(exitcond_fu_196_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end
    end
end

/// ap_reg_ppiten_pp0_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end
    end
end

/// ap_reg_ppiten_pp0_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it12
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
        end
    end
end

/// ap_reg_ppiten_pp0_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it13
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
        end
    end
end

/// ap_reg_ppiten_pp0_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it14
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
        end
    end
end

/// ap_reg_ppiten_pp0_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it15
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
        end
    end
end

/// ap_reg_ppiten_pp0_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it16
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
        end
    end
end

/// ap_reg_ppiten_pp0_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it17
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
        end
    end
end

/// ap_reg_ppiten_pp0_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it18
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
        end
    end
end

/// ap_reg_ppiten_pp0_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it19
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// ap_reg_ppiten_pp0_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it20
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
        end
    end
end

/// ap_reg_ppiten_pp0_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it21
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
        end
    end
end

/// ap_reg_ppiten_pp0_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it22
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
        end
    end
end

/// ap_reg_ppiten_pp0_it23 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it23
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
        end
    end
end

/// ap_reg_ppiten_pp0_it24 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it24
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
        end
    end
end

/// ap_reg_ppiten_pp0_it25 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it25
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
        end
    end
end

/// ap_reg_ppiten_pp0_it26 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it26
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
        end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end
    end
end

/// ap_reg_ppiten_pp0_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_196_p2 == ap_const_lv1_0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
        idxPixel_reg_153 <= idxPixel_1_fu_202_p2;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        idxPixel_reg_153 <= ap_const_lv17_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
        ap_reg_ppstg_exitcond_reg_375_pp0_it1 <= exitcond_reg_375;
        ap_reg_ppstg_exitcond_reg_375_pp0_it10 <= ap_reg_ppstg_exitcond_reg_375_pp0_it9;
        ap_reg_ppstg_exitcond_reg_375_pp0_it11 <= ap_reg_ppstg_exitcond_reg_375_pp0_it10;
        ap_reg_ppstg_exitcond_reg_375_pp0_it12 <= ap_reg_ppstg_exitcond_reg_375_pp0_it11;
        ap_reg_ppstg_exitcond_reg_375_pp0_it13 <= ap_reg_ppstg_exitcond_reg_375_pp0_it12;
        ap_reg_ppstg_exitcond_reg_375_pp0_it14 <= ap_reg_ppstg_exitcond_reg_375_pp0_it13;
        ap_reg_ppstg_exitcond_reg_375_pp0_it15 <= ap_reg_ppstg_exitcond_reg_375_pp0_it14;
        ap_reg_ppstg_exitcond_reg_375_pp0_it16 <= ap_reg_ppstg_exitcond_reg_375_pp0_it15;
        ap_reg_ppstg_exitcond_reg_375_pp0_it17 <= ap_reg_ppstg_exitcond_reg_375_pp0_it16;
        ap_reg_ppstg_exitcond_reg_375_pp0_it18 <= ap_reg_ppstg_exitcond_reg_375_pp0_it17;
        ap_reg_ppstg_exitcond_reg_375_pp0_it19 <= ap_reg_ppstg_exitcond_reg_375_pp0_it18;
        ap_reg_ppstg_exitcond_reg_375_pp0_it2 <= ap_reg_ppstg_exitcond_reg_375_pp0_it1;
        ap_reg_ppstg_exitcond_reg_375_pp0_it20 <= ap_reg_ppstg_exitcond_reg_375_pp0_it19;
        ap_reg_ppstg_exitcond_reg_375_pp0_it21 <= ap_reg_ppstg_exitcond_reg_375_pp0_it20;
        ap_reg_ppstg_exitcond_reg_375_pp0_it22 <= ap_reg_ppstg_exitcond_reg_375_pp0_it21;
        ap_reg_ppstg_exitcond_reg_375_pp0_it23 <= ap_reg_ppstg_exitcond_reg_375_pp0_it22;
        ap_reg_ppstg_exitcond_reg_375_pp0_it24 <= ap_reg_ppstg_exitcond_reg_375_pp0_it23;
        ap_reg_ppstg_exitcond_reg_375_pp0_it25 <= ap_reg_ppstg_exitcond_reg_375_pp0_it24;
        ap_reg_ppstg_exitcond_reg_375_pp0_it3 <= ap_reg_ppstg_exitcond_reg_375_pp0_it2;
        ap_reg_ppstg_exitcond_reg_375_pp0_it4 <= ap_reg_ppstg_exitcond_reg_375_pp0_it3;
        ap_reg_ppstg_exitcond_reg_375_pp0_it5 <= ap_reg_ppstg_exitcond_reg_375_pp0_it4;
        ap_reg_ppstg_exitcond_reg_375_pp0_it6 <= ap_reg_ppstg_exitcond_reg_375_pp0_it5;
        ap_reg_ppstg_exitcond_reg_375_pp0_it7 <= ap_reg_ppstg_exitcond_reg_375_pp0_it6;
        ap_reg_ppstg_exitcond_reg_375_pp0_it8 <= ap_reg_ppstg_exitcond_reg_375_pp0_it7;
        ap_reg_ppstg_exitcond_reg_375_pp0_it9 <= ap_reg_ppstg_exitcond_reg_375_pp0_it8;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it1 <= tmp_dest_V_reg_409;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it10 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it9;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it11 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it10;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it12 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it11;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it13 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it12;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it14 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it13;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it15 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it14;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it16 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it15;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it17 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it16;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it18 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it17;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it19 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it18;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it2 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it1;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it20 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it19;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it21 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it20;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it22 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it21;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it23 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it22;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it24 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it23;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it25 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it24;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it3 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it2;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it4 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it3;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it5 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it4;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it6 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it5;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it7 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it6;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it8 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it7;
        ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it9 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it8;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it1 <= tmp_id_V_reg_404;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it10 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it9;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it11 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it10;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it12 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it11;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it13 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it12;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it14 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it13;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it15 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it14;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it16 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it15;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it17 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it16;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it18 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it17;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it19 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it18;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it2 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it1;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it20 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it19;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it21 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it20;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it22 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it21;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it23 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it22;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it24 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it23;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it25 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it24;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it3 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it2;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it4 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it3;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it5 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it4;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it6 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it5;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it7 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it6;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it8 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it7;
        ap_reg_ppstg_tmp_id_V_reg_404_pp0_it9 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it8;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it1 <= tmp_keep_V_reg_384;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it10 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it9;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it11 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it10;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it12 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it11;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it13 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it12;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it14 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it13;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it15 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it14;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it16 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it15;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it17 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it16;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it18 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it17;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it19 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it18;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it2 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it1;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it20 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it19;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it21 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it20;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it22 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it21;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it23 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it22;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it24 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it23;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it25 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it24;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it3 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it2;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it4 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it3;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it5 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it4;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it6 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it5;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it7 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it6;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it8 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it7;
        ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it9 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it8;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it1 <= tmp_last_V_reg_399;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it10 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it9;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it11 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it10;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it12 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it11;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it13 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it12;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it14 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it13;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it15 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it14;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it16 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it15;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it17 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it16;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it18 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it17;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it19 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it18;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it2 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it1;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it20 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it19;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it21 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it20;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it22 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it21;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it23 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it22;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it24 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it23;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it25 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it24;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it3 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it2;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it4 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it3;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it5 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it4;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it6 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it5;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it7 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it6;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it8 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it7;
        ap_reg_ppstg_tmp_last_V_reg_399_pp0_it9 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it8;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it1 <= tmp_strb_V_reg_389;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it10 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it9;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it11 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it10;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it12 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it11;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it13 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it12;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it14 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it13;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it15 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it14;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it16 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it15;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it17 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it16;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it18 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it17;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it19 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it18;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it2 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it1;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it20 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it19;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it21 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it20;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it22 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it21;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it23 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it22;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it24 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it23;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it25 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it24;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it3 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it2;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it4 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it3;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it5 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it4;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it6 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it5;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it7 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it6;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it8 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it7;
        ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it9 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it8;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it1 <= tmp_user_V_reg_394;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it10 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it9;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it11 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it10;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it12 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it11;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it13 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it12;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it14 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it13;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it15 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it14;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it16 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it15;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it17 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it16;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it18 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it17;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it19 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it18;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it2 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it1;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it20 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it19;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it21 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it20;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it22 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it21;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it23 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it22;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it24 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it23;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it25 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it24;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it3 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it2;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it4 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it3;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it5 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it4;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it6 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it5;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it7 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it6;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it8 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it7;
        ap_reg_ppstg_tmp_user_V_reg_394_pp0_it9 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
        exitcond_reg_375 <= exitcond_fu_196_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it25) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it24))) begin
        loc_V_1_reg_435 <= loc_V_1_fu_264_p1;
        loc_V_reg_429 <= {{p_Val2_s_fu_250_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it4))) begin
        tmp_6_reg_419 <= grp_fu_174_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it21) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it20))) begin
        tmp_7_reg_424 <= grp_fu_170_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        tmp_cast_reg_360[0] <= tmp_cast_fu_177_p1[0];
tmp_cast_reg_360[1] <= tmp_cast_fu_177_p1[1];
tmp_cast_reg_360[2] <= tmp_cast_fu_177_p1[2];
tmp_cast_reg_360[3] <= tmp_cast_fu_177_p1[3];
tmp_cast_reg_360[4] <= tmp_cast_fu_177_p1[4];
tmp_cast_reg_360[5] <= tmp_cast_fu_177_p1[5];
tmp_cast_reg_360[6] <= tmp_cast_fu_177_p1[6];
tmp_cast_reg_360[7] <= tmp_cast_fu_177_p1[7];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_196_p2 == ap_const_lv1_0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
        tmp_dest_V_reg_409 <= inStream_TDEST;
        tmp_id_V_reg_404 <= inStream_TID;
        tmp_keep_V_reg_384 <= inStream_TKEEP;
        tmp_last_V_reg_399 <= inStream_TLAST;
        tmp_strb_V_reg_389 <= inStream_TSTRB;
        tmp_user_V_reg_394 <= inStream_TUSER;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        xMax_minus_xMin_reg_370 <= grp_fu_174_p1;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st34_fsm_7 == ap_CS_fsm)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st34_fsm_7 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_outStream_TREADY assign process. ///
always @ (outStream_TREADY or ap_reg_ioackin_outStream_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_outStream_TREADY)) begin
        ap_sig_ioackin_outStream_TREADY = outStream_TREADY;
    end else begin
        ap_sig_ioackin_outStream_TREADY = ap_const_logic_1;
    end
end

/// grp_fu_165_ce assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_102 or ap_reg_ppstg_exitcond_reg_375_pp0_it25 or ap_sig_ioackin_outStream_TREADY or ap_reg_ppiten_pp0_it26 or ap_reg_ppstg_exitcond_reg_375_pp0_it21 or ap_reg_ppstg_exitcond_reg_375_pp0_it22 or ap_reg_ppstg_exitcond_reg_375_pp0_it23 or ap_reg_ppstg_exitcond_reg_375_pp0_it24)
begin
    if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))) & ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it24) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it21) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it22) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it23)))) begin
        grp_fu_165_ce = ap_const_logic_1;
    end else begin
        grp_fu_165_ce = ap_const_logic_0;
    end
end

/// grp_fu_170_ce assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_102 or ap_reg_ppstg_exitcond_reg_375_pp0_it25 or ap_sig_ioackin_outStream_TREADY or ap_reg_ppiten_pp0_it26 or ap_reg_ppstg_exitcond_reg_375_pp0_it5 or ap_reg_ppstg_exitcond_reg_375_pp0_it6 or ap_reg_ppstg_exitcond_reg_375_pp0_it7 or ap_reg_ppstg_exitcond_reg_375_pp0_it8 or ap_reg_ppstg_exitcond_reg_375_pp0_it9 or ap_reg_ppstg_exitcond_reg_375_pp0_it10 or ap_reg_ppstg_exitcond_reg_375_pp0_it11 or ap_reg_ppstg_exitcond_reg_375_pp0_it12 or ap_reg_ppstg_exitcond_reg_375_pp0_it13 or ap_reg_ppstg_exitcond_reg_375_pp0_it14 or ap_reg_ppstg_exitcond_reg_375_pp0_it15 or ap_reg_ppstg_exitcond_reg_375_pp0_it16 or ap_reg_ppstg_exitcond_reg_375_pp0_it17 or ap_reg_ppstg_exitcond_reg_375_pp0_it18 or ap_reg_ppstg_exitcond_reg_375_pp0_it19 or ap_reg_ppstg_exitcond_reg_375_pp0_it20)
begin
    if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))) & ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it20) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it5) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it6) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it7) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it8) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it9) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it10) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it11) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it12) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it13) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it14) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it15) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it16) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it17) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it18) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it19)))) begin
        grp_fu_170_ce = ap_const_logic_1;
    end else begin
        grp_fu_170_ce = ap_const_logic_0;
    end
end

/// grp_fu_174_ce assign process. ///
always @ (ap_start or ap_CS_fsm or exitcond_fu_196_p2 or exitcond_reg_375 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_102 or ap_reg_ppstg_exitcond_reg_375_pp0_it25 or ap_sig_ioackin_outStream_TREADY or ap_reg_ppiten_pp0_it26 or ap_reg_ppstg_exitcond_reg_375_pp0_it1 or ap_reg_ppstg_exitcond_reg_375_pp0_it2 or ap_reg_ppstg_exitcond_reg_375_pp0_it3 or ap_reg_ppstg_exitcond_reg_375_pp0_it4)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_start == ap_const_logic_0)) | ((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26)) | (~(exitcond_fu_196_p2 == ap_const_lv1_0) & ~(exitcond_reg_375 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it2) & ~(ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it3) & ~(ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it4)))) | (ap_ST_st34_fsm_7 == ap_CS_fsm))) begin
        grp_fu_174_ce = ap_const_logic_0;
    end else begin
        grp_fu_174_ce = ap_const_logic_1;
    end
end

/// grp_fu_174_p0 assign process. ///
always @ (ap_CS_fsm or xMax_minus_xMin7_fu_191_p1 or ap_reg_ppiten_pp0_it0 or tmp_s_fu_245_p1)
begin
    if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        grp_fu_174_p0 = tmp_s_fu_245_p1;
    end else if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        grp_fu_174_p0 = xMax_minus_xMin7_fu_191_p1;
    end else begin
        grp_fu_174_p0 = 'bx;
    end
end

/// inStream_TREADY assign process. ///
always @ (ap_CS_fsm or exitcond_fu_196_p2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_102 or ap_reg_ppstg_exitcond_reg_375_pp0_it25 or ap_sig_ioackin_outStream_TREADY or ap_reg_ppiten_pp0_it26)
begin
    if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_196_p2 == ap_const_lv1_0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))))) begin
        inStream_TREADY = ap_const_logic_1;
    end else begin
        inStream_TREADY = ap_const_logic_0;
    end
end

/// outStream_TVALID assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_102 or ap_reg_ppstg_exitcond_reg_375_pp0_it25 or ap_reg_ppiten_pp0_it26 or ap_reg_ioackin_outStream_TREADY)
begin
    if (((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) & (ap_const_logic_0 == ap_reg_ioackin_outStream_TREADY))) begin
        outStream_TVALID = ap_const_logic_1;
    end else begin
        outStream_TVALID = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond_fu_196_p2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_102 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it25 or ap_reg_ppstg_exitcond_reg_375_pp0_it25 or ap_sig_ioackin_outStream_TREADY or ap_reg_ppiten_pp0_it26)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_6;
        end
        ap_ST_pp0_stg0_fsm_6 : 
        begin
            if ((~((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it25)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))) & ~(exitcond_fu_196_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_6;
            end else if ((((ap_ST_pp0_stg0_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it25)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_102) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_375_pp0_it25) & (ap_const_logic_0 == ap_sig_ioackin_outStream_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it26))) & ~(exitcond_fu_196_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st34_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_6;
            end
        end
        ap_ST_st34_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_102 assign process. ///
always @ (inStream_TVALID or exitcond_fu_196_p2)
begin
    ap_sig_bdd_102 = ((inStream_TVALID == ap_const_logic_0) & (exitcond_fu_196_p2 == ap_const_lv1_0));
end
assign doHistStretch_CRTL_BUS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

/// doHistStretch_ap_rst assign process. ///
always @ (ap_rst_n)
begin
    doHistStretch_ap_rst = ~ap_rst_n;
end
assign exitcond_fu_196_p2 = (idxPixel_reg_153 == ap_const_lv17_12C00? 1'b1: 1'b0);
assign grp_fu_165_p0 = tmp_7_reg_424;
assign grp_fu_165_p1 = ap_const_lv32_437F0000;
assign grp_fu_170_p0 = tmp_6_reg_419;
assign grp_fu_170_p1 = xMax_minus_xMin_reg_370;
assign idxPixel_1_fu_202_p2 = (idxPixel_reg_153 + ap_const_lv17_1);
assign isNeg_fu_288_p3 = sh_assign_fu_282_p2[ap_const_lv32_8];
assign loc_V_1_fu_264_p1 = p_Val2_s_fu_250_p1[22:0];
assign outStream_TDATA = {{p_Val2_3_fu_341_p3[ap_const_lv32_1E : ap_const_lv32_17]}};
assign outStream_TDEST = ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it25;
assign outStream_TID = ap_reg_ppstg_tmp_id_V_reg_404_pp0_it25;
assign outStream_TKEEP = ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it25;
assign outStream_TLAST = ap_reg_ppstg_tmp_last_V_reg_399_pp0_it25;
assign outStream_TSTRB = ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it25;
assign outStream_TUSER = ap_reg_ppstg_tmp_user_V_reg_394_pp0_it25;
assign p_Result_s_fu_268_p3 = {{ap_const_lv1_1}, {loc_V_1_reg_435}};
assign p_Val2_3_fu_341_p3 = ((isNeg_fu_288_p3)? tmp_3_i_i_cast_fu_331_p1: tmp_5_i_i_fu_335_p2);
assign p_Val2_s_fu_250_p1 = grp_fu_165_p2;
assign sh_assign_1_fu_305_p1 = $signed(tmp_1_i_i_fu_296_p2);
assign sh_assign_1_fu_305_p3 = ((isNeg_fu_288_p3)? sh_assign_1_fu_305_p1: sh_assign_fu_282_p2);
assign sh_assign_fu_282_p2 = (tmp_i_i_i_cast1_fu_279_p1 + ap_const_lv9_181);
assign tmp_1_cast_fu_181_p1 = $unsigned(xMax);
assign tmp_1_i_i_fu_296_p2 = (ap_const_lv8_7F - loc_V_reg_429);
assign tmp_2_fu_185_p2 = (tmp_1_cast_fu_181_p1 - tmp_cast_fu_177_p1);
assign tmp_2_i_i_fu_321_p0 = $signed(sh_assign_1_fu_305_p3);
assign tmp_2_i_i_fu_321_p1 = $unsigned(tmp_2_i_i_fu_321_p0);
assign tmp_3_i_i_cast_fu_331_p1 = $unsigned(tmp_3_i_i_fu_325_p2);
assign tmp_3_i_i_fu_325_p1 = $signed(sh_assign_1_fu_305_p3);
assign tmp_3_i_i_fu_325_p2 = p_Result_s_fu_268_p3 >> tmp_3_i_i_fu_325_p1;
assign tmp_4_cast_fu_236_p1 = $unsigned(inStream_TDATA);
assign tmp_5_fu_240_p2 = (tmp_4_cast_fu_236_p1 - tmp_cast_reg_360);
assign tmp_5_i_i_fu_335_p2 = tmp_i_i_fu_275_p1 << tmp_2_i_i_fu_321_p1;
assign tmp_cast_fu_177_p1 = $unsigned(xMin);
assign tmp_i_i_fu_275_p1 = $unsigned(p_Result_s_fu_268_p3);
assign tmp_i_i_i_cast1_fu_279_p1 = $unsigned(loc_V_reg_429);
assign tmp_s_fu_245_p1 = $signed(tmp_5_fu_240_p2);
assign xMax_minus_xMin7_fu_191_p1 = $signed(tmp_2_fu_185_p2);
always @ (posedge ap_clk)
begin
    tmp_cast_reg_360[8] <= 1'b0;
end



endmodule //doHistStretch

