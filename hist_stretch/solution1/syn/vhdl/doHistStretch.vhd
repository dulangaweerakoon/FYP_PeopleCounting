-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.2
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity doHistStretch is
generic (
    C_S_AXI_CRTL_BUS_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CRTL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_CRTL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CRTL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CRTL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    inStream_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    inStream_TVALID : IN STD_LOGIC;
    inStream_TREADY : OUT STD_LOGIC;
    inStream_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    inStream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    inStream_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    outStream_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    outStream_TVALID : OUT STD_LOGIC;
    outStream_TREADY : IN STD_LOGIC;
    outStream_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    outStream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    outStream_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of doHistStretch is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "doHistStretch,hls_ip_2014_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.133000,HLS_SYN_LAT=76832,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_ST_pp0_stg0_fsm_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_ST_st34_fsm_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant C_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_437F0000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011011111110000000000000000";
    constant ap_const_lv17_12C00 : STD_LOGIC_VECTOR (16 downto 0) := "10010110000000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";

    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal ap_ready : STD_LOGIC;
    signal xMin : STD_LOGIC_VECTOR (7 downto 0);
    signal xMax : STD_LOGIC_VECTOR (7 downto 0);
    signal doHistStretch_CRTL_BUS_s_axi_U_ap_dummy_ce : STD_LOGIC;
    signal idxPixel_reg_153 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_cast_fu_177_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_cast_reg_360 : STD_LOGIC_VECTOR (8 downto 0);
    signal xMax_minus_xMin7_fu_191_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_185_p2_temp: signed (9-1 downto 0);
    signal grp_fu_174_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xMax_minus_xMin_reg_370 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_375 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_sig_bdd_102 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it21 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it22 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it23 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it24 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it25 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_outStream_TREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it26 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_375_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal idxPixel_1_fu_202_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_keep_V_reg_384 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strb_V_reg_389 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_reg_394 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it6 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it7 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it8 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it9 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it10 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it11 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it12 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it13 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it14 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it15 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it16 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it17 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it18 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it19 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it20 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it21 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it22 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it23 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it24 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_user_V_reg_394_pp0_it25 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_last_V_reg_399 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_last_V_reg_399_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_reg_404 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it5 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it6 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it7 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it8 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it9 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it10 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it11 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it12 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it13 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it14 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it15 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it16 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it17 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it18 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it19 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it20 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it21 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it22 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it23 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it24 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_ppstg_tmp_id_V_reg_404_pp0_it25 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_dest_V_reg_409 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it5 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it6 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it7 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it8 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it9 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it10 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it11 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it12 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it13 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it14 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it15 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it16 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it17 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it18 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it19 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it20 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it21 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it22 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it23 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it24 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it25 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_245_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_240_p2_temp: signed (9-1 downto 0);
    signal tmp_6_reg_419 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_170_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_424 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_reg_429 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_fu_264_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_435 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ioackin_outStream_TREADY : STD_LOGIC := '0';
    signal grp_fu_165_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_165_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_170_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_170_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_174_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_cast_fu_181_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_185_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_cast_fu_236_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_fu_240_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_165_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_268_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i_i_i_cast1_fu_279_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_282_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_i_i_fu_296_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_288_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_1_fu_305_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_i_i_fu_296_p2_temp: signed (8-1 downto 0);
    signal sh_assign_1_fu_305_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_i_i_fu_321_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_fu_305_p3_temp: signed (9-1 downto 0);
    signal tmp_3_i_i_fu_325_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_3_i_i_fu_325_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i_i_fu_275_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_2_i_i_fu_321_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_3_i_i_cast_fu_331_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_5_i_i_fu_335_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Val2_3_fu_341_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal doHistStretch_ap_rst : STD_LOGIC;
    signal grp_fu_165_ce : STD_LOGIC;
    signal grp_fu_170_ce : STD_LOGIC;
    signal grp_fu_174_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);

    component doHistStretch_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component doHistStretch_fdiv_32ns_32ns_32_16 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component doHistStretch_sitofp_32s_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component doHistStretch_CRTL_BUS_s_axi IS
    generic (
        C_ADDR_WIDTH : INTEGER;
        C_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESETN : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        xMin : OUT STD_LOGIC_VECTOR (7 downto 0);
        xMax : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    doHistStretch_CRTL_BUS_s_axi_U : component doHistStretch_CRTL_BUS_s_axi
    generic map (
        C_ADDR_WIDTH => C_S_AXI_CRTL_BUS_ADDR_WIDTH,
        C_DATA_WIDTH => C_S_AXI_CRTL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CRTL_BUS_AWVALID,
        AWREADY => s_axi_CRTL_BUS_AWREADY,
        AWADDR => s_axi_CRTL_BUS_AWADDR,
        WVALID => s_axi_CRTL_BUS_WVALID,
        WREADY => s_axi_CRTL_BUS_WREADY,
        WDATA => s_axi_CRTL_BUS_WDATA,
        WSTRB => s_axi_CRTL_BUS_WSTRB,
        ARVALID => s_axi_CRTL_BUS_ARVALID,
        ARREADY => s_axi_CRTL_BUS_ARREADY,
        ARADDR => s_axi_CRTL_BUS_ARADDR,
        RVALID => s_axi_CRTL_BUS_RVALID,
        RREADY => s_axi_CRTL_BUS_RREADY,
        RDATA => s_axi_CRTL_BUS_RDATA,
        RRESP => s_axi_CRTL_BUS_RRESP,
        BVALID => s_axi_CRTL_BUS_BVALID,
        BREADY => s_axi_CRTL_BUS_BREADY,
        BRESP => s_axi_CRTL_BUS_BRESP,
        ACLK => ap_clk,
        ARESETN => ap_rst_n,
        ACLK_EN => doHistStretch_CRTL_BUS_s_axi_U_ap_dummy_ce,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        xMin => xMin,
        xMax => xMax);

    doHistStretch_fmul_32ns_32ns_32_4_max_dsp_U0 : component doHistStretch_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 0,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => doHistStretch_ap_rst,
        din0 => grp_fu_165_p0,
        din1 => grp_fu_165_p1,
        ce => grp_fu_165_ce,
        dout => grp_fu_165_p2);

    doHistStretch_fdiv_32ns_32ns_32_16_U1 : component doHistStretch_fdiv_32ns_32ns_32_16
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => doHistStretch_ap_rst,
        din0 => grp_fu_170_p0,
        din1 => grp_fu_170_p1,
        ce => grp_fu_170_ce,
        dout => grp_fu_170_p2);

    doHistStretch_sitofp_32s_32_6_U2 : component doHistStretch_sitofp_32s_32_6
    generic map (
        ID => 2,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => doHistStretch_ap_rst,
        din0 => grp_fu_174_p0,
        ce => grp_fu_174_ce,
        dout => grp_fu_174_p1);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_outStream_TREADY assign process. --
    ap_reg_ioackin_outStream_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ioackin_outStream_TREADY <= ap_const_logic_0;
            else
                if ((((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26))))))) then 
                    ap_reg_ioackin_outStream_TREADY <= ap_const_logic_0;
                elsif ((((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102)) and (ap_const_logic_1 = outStream_TREADY)))) then 
                    ap_reg_ioackin_outStream_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))) and not((exitcond_fu_196_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (exitcond_fu_196_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_ST_st6_fsm_5 = ap_CS_fsm) or ((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))) and not((exitcond_fu_196_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it13 assign process. --
    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it14 assign process. --
    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it15 assign process. --
    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it16 assign process. --
    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it17 assign process. --
    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it18 assign process. --
    ap_reg_ppiten_pp0_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it19 assign process. --
    ap_reg_ppiten_pp0_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it20 assign process. --
    ap_reg_ppiten_pp0_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it21 assign process. --
    ap_reg_ppiten_pp0_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it22 assign process. --
    ap_reg_ppiten_pp0_it22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it23 assign process. --
    ap_reg_ppiten_pp0_it23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it24 assign process. --
    ap_reg_ppiten_pp0_it24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it25 assign process. --
    ap_reg_ppiten_pp0_it25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it26 assign process. --
    ap_reg_ppiten_pp0_it26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
                elsif ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
                    ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- idxPixel_reg_153 assign process. --
    idxPixel_reg_153_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_fu_196_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then 
                idxPixel_reg_153 <= idxPixel_1_fu_202_p2;
            elsif ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
                idxPixel_reg_153 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then
                ap_reg_ppstg_exitcond_reg_375_pp0_it1 <= exitcond_reg_375;
                ap_reg_ppstg_exitcond_reg_375_pp0_it10 <= ap_reg_ppstg_exitcond_reg_375_pp0_it9;
                ap_reg_ppstg_exitcond_reg_375_pp0_it11 <= ap_reg_ppstg_exitcond_reg_375_pp0_it10;
                ap_reg_ppstg_exitcond_reg_375_pp0_it12 <= ap_reg_ppstg_exitcond_reg_375_pp0_it11;
                ap_reg_ppstg_exitcond_reg_375_pp0_it13 <= ap_reg_ppstg_exitcond_reg_375_pp0_it12;
                ap_reg_ppstg_exitcond_reg_375_pp0_it14 <= ap_reg_ppstg_exitcond_reg_375_pp0_it13;
                ap_reg_ppstg_exitcond_reg_375_pp0_it15 <= ap_reg_ppstg_exitcond_reg_375_pp0_it14;
                ap_reg_ppstg_exitcond_reg_375_pp0_it16 <= ap_reg_ppstg_exitcond_reg_375_pp0_it15;
                ap_reg_ppstg_exitcond_reg_375_pp0_it17 <= ap_reg_ppstg_exitcond_reg_375_pp0_it16;
                ap_reg_ppstg_exitcond_reg_375_pp0_it18 <= ap_reg_ppstg_exitcond_reg_375_pp0_it17;
                ap_reg_ppstg_exitcond_reg_375_pp0_it19 <= ap_reg_ppstg_exitcond_reg_375_pp0_it18;
                ap_reg_ppstg_exitcond_reg_375_pp0_it2 <= ap_reg_ppstg_exitcond_reg_375_pp0_it1;
                ap_reg_ppstg_exitcond_reg_375_pp0_it20 <= ap_reg_ppstg_exitcond_reg_375_pp0_it19;
                ap_reg_ppstg_exitcond_reg_375_pp0_it21 <= ap_reg_ppstg_exitcond_reg_375_pp0_it20;
                ap_reg_ppstg_exitcond_reg_375_pp0_it22 <= ap_reg_ppstg_exitcond_reg_375_pp0_it21;
                ap_reg_ppstg_exitcond_reg_375_pp0_it23 <= ap_reg_ppstg_exitcond_reg_375_pp0_it22;
                ap_reg_ppstg_exitcond_reg_375_pp0_it24 <= ap_reg_ppstg_exitcond_reg_375_pp0_it23;
                ap_reg_ppstg_exitcond_reg_375_pp0_it25 <= ap_reg_ppstg_exitcond_reg_375_pp0_it24;
                ap_reg_ppstg_exitcond_reg_375_pp0_it3 <= ap_reg_ppstg_exitcond_reg_375_pp0_it2;
                ap_reg_ppstg_exitcond_reg_375_pp0_it4 <= ap_reg_ppstg_exitcond_reg_375_pp0_it3;
                ap_reg_ppstg_exitcond_reg_375_pp0_it5 <= ap_reg_ppstg_exitcond_reg_375_pp0_it4;
                ap_reg_ppstg_exitcond_reg_375_pp0_it6 <= ap_reg_ppstg_exitcond_reg_375_pp0_it5;
                ap_reg_ppstg_exitcond_reg_375_pp0_it7 <= ap_reg_ppstg_exitcond_reg_375_pp0_it6;
                ap_reg_ppstg_exitcond_reg_375_pp0_it8 <= ap_reg_ppstg_exitcond_reg_375_pp0_it7;
                ap_reg_ppstg_exitcond_reg_375_pp0_it9 <= ap_reg_ppstg_exitcond_reg_375_pp0_it8;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it1 <= tmp_dest_V_reg_409;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it10 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it9;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it11 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it10;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it12 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it11;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it13 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it12;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it14 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it13;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it15 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it14;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it16 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it15;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it17 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it16;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it18 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it17;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it19 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it18;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it2 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it1;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it20 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it19;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it21 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it20;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it22 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it21;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it23 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it22;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it24 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it23;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it25 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it24;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it3 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it2;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it4 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it3;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it5 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it4;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it6 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it5;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it7 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it6;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it8 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it7;
                ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it9 <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it8;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it1 <= tmp_id_V_reg_404;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it10 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it9;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it11 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it10;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it12 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it11;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it13 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it12;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it14 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it13;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it15 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it14;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it16 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it15;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it17 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it16;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it18 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it17;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it19 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it18;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it2 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it1;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it20 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it19;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it21 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it20;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it22 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it21;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it23 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it22;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it24 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it23;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it25 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it24;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it3 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it2;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it4 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it3;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it5 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it4;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it6 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it5;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it7 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it6;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it8 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it7;
                ap_reg_ppstg_tmp_id_V_reg_404_pp0_it9 <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it8;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it1 <= tmp_keep_V_reg_384;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it10 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it9;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it11 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it10;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it12 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it11;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it13 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it12;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it14 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it13;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it15 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it14;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it16 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it15;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it17 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it16;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it18 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it17;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it19 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it18;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it2 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it1;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it20 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it19;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it21 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it20;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it22 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it21;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it23 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it22;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it24 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it23;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it25 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it24;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it3 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it2;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it4 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it3;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it5 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it4;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it6 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it5;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it7 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it6;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it8 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it7;
                ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it9 <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it8;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it1 <= tmp_last_V_reg_399;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it10 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it9;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it11 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it10;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it12 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it11;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it13 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it12;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it14 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it13;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it15 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it14;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it16 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it15;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it17 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it16;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it18 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it17;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it19 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it18;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it2 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it1;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it20 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it19;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it21 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it20;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it22 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it21;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it23 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it22;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it24 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it23;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it25 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it24;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it3 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it2;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it4 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it3;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it5 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it4;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it6 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it5;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it7 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it6;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it8 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it7;
                ap_reg_ppstg_tmp_last_V_reg_399_pp0_it9 <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it8;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it1 <= tmp_strb_V_reg_389;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it10 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it9;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it11 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it10;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it12 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it11;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it13 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it12;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it14 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it13;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it15 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it14;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it16 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it15;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it17 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it16;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it18 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it17;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it19 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it18;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it2 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it1;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it20 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it19;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it21 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it20;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it22 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it21;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it23 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it22;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it24 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it23;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it25 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it24;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it3 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it2;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it4 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it3;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it5 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it4;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it6 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it5;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it7 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it6;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it8 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it7;
                ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it9 <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it8;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it1 <= tmp_user_V_reg_394;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it10 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it9;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it11 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it10;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it12 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it11;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it13 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it12;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it14 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it13;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it15 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it14;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it16 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it15;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it17 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it16;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it18 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it17;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it19 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it18;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it2 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it1;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it20 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it19;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it21 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it20;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it22 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it21;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it23 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it22;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it24 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it23;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it25 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it24;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it3 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it2;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it4 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it3;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it5 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it4;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it6 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it5;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it7 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it6;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it8 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it7;
                ap_reg_ppstg_tmp_user_V_reg_394_pp0_it9 <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then
                exitcond_reg_375 <= exitcond_fu_196_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it25) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it24))) then
                loc_V_1_reg_435 <= loc_V_1_fu_264_p1;
                loc_V_reg_429 <= p_Val2_s_fu_250_p1(30 downto 23);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it4))) then
                tmp_6_reg_419 <= grp_fu_174_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it20))) then
                tmp_7_reg_424 <= grp_fu_170_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then
                tmp_cast_reg_360(0) <= tmp_cast_fu_177_p1(0);
    tmp_cast_reg_360(1) <= tmp_cast_fu_177_p1(1);
    tmp_cast_reg_360(2) <= tmp_cast_fu_177_p1(2);
    tmp_cast_reg_360(3) <= tmp_cast_fu_177_p1(3);
    tmp_cast_reg_360(4) <= tmp_cast_fu_177_p1(4);
    tmp_cast_reg_360(5) <= tmp_cast_fu_177_p1(5);
    tmp_cast_reg_360(6) <= tmp_cast_fu_177_p1(6);
    tmp_cast_reg_360(7) <= tmp_cast_fu_177_p1(7);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_fu_196_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))))) then
                tmp_dest_V_reg_409 <= inStream_TDEST;
                tmp_id_V_reg_404 <= inStream_TID;
                tmp_keep_V_reg_384 <= inStream_TKEEP;
                tmp_last_V_reg_399 <= inStream_TLAST;
                tmp_strb_V_reg_389 <= inStream_TSTRB;
                tmp_user_V_reg_394 <= inStream_TUSER;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then
                xMax_minus_xMin_reg_370 <= grp_fu_174_p1;
            end if;
        end if;
    end process;
    tmp_cast_reg_360(8) <= '0';

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_fu_196_p2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_102, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it25, ap_reg_ppstg_exitcond_reg_375_pp0_it25, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it26)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_6;
            when ap_ST_pp0_stg0_fsm_6 => 
                if ((not(((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it25)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))) and not((exitcond_fu_196_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_6;
                elsif ((((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it25))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))) and not((exitcond_fu_196_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st34_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_6;
                end if;
            when ap_ST_st34_fsm_7 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st34_fsm_7 = ap_CS_fsm)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st34_fsm_7 = ap_CS_fsm)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_102 assign process. --
    ap_sig_bdd_102_assign_proc : process(inStream_TVALID, exitcond_fu_196_p2)
    begin
                ap_sig_bdd_102 <= ((inStream_TVALID = ap_const_logic_0) and (exitcond_fu_196_p2 = ap_const_lv1_0));
    end process;


    -- ap_sig_ioackin_outStream_TREADY assign process. --
    ap_sig_ioackin_outStream_TREADY_assign_proc : process(outStream_TREADY, ap_reg_ioackin_outStream_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_outStream_TREADY)) then 
            ap_sig_ioackin_outStream_TREADY <= outStream_TREADY;
        else 
            ap_sig_ioackin_outStream_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    doHistStretch_CRTL_BUS_s_axi_U_ap_dummy_ce <= ap_const_logic_1;

    -- doHistStretch_ap_rst assign process. --
    doHistStretch_ap_rst_assign_proc : process(ap_rst_n)
    begin
                doHistStretch_ap_rst <= not(ap_rst_n);
    end process;

    exitcond_fu_196_p2 <= "1" when (idxPixel_reg_153 = ap_const_lv17_12C00) else "0";

    -- grp_fu_165_ce assign process. --
    grp_fu_165_ce_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_sig_bdd_102, ap_reg_ppstg_exitcond_reg_375_pp0_it25, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it26, ap_reg_ppstg_exitcond_reg_375_pp0_it21, ap_reg_ppstg_exitcond_reg_375_pp0_it22, ap_reg_ppstg_exitcond_reg_375_pp0_it23, ap_reg_ppstg_exitcond_reg_375_pp0_it24)
    begin
        if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it24) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it21) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it22) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it23)))) then 
            grp_fu_165_ce <= ap_const_logic_1;
        else 
            grp_fu_165_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_165_p0 <= tmp_7_reg_424;
    grp_fu_165_p1 <= ap_const_lv32_437F0000;

    -- grp_fu_170_ce assign process. --
    grp_fu_170_ce_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_sig_bdd_102, ap_reg_ppstg_exitcond_reg_375_pp0_it25, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it26, ap_reg_ppstg_exitcond_reg_375_pp0_it5, ap_reg_ppstg_exitcond_reg_375_pp0_it6, ap_reg_ppstg_exitcond_reg_375_pp0_it7, ap_reg_ppstg_exitcond_reg_375_pp0_it8, ap_reg_ppstg_exitcond_reg_375_pp0_it9, ap_reg_ppstg_exitcond_reg_375_pp0_it10, ap_reg_ppstg_exitcond_reg_375_pp0_it11, ap_reg_ppstg_exitcond_reg_375_pp0_it12, ap_reg_ppstg_exitcond_reg_375_pp0_it13, ap_reg_ppstg_exitcond_reg_375_pp0_it14, ap_reg_ppstg_exitcond_reg_375_pp0_it15, ap_reg_ppstg_exitcond_reg_375_pp0_it16, ap_reg_ppstg_exitcond_reg_375_pp0_it17, ap_reg_ppstg_exitcond_reg_375_pp0_it18, ap_reg_ppstg_exitcond_reg_375_pp0_it19, ap_reg_ppstg_exitcond_reg_375_pp0_it20)
    begin
        if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it20) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it5) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it6) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it7) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it8) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it9) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it10) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it11) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it12) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it13) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it14) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it15) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it16) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it17) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it18) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it19)))) then 
            grp_fu_170_ce <= ap_const_logic_1;
        else 
            grp_fu_170_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_170_p0 <= tmp_6_reg_419;
    grp_fu_170_p1 <= xMax_minus_xMin_reg_370;

    -- grp_fu_174_ce assign process. --
    grp_fu_174_ce_assign_proc : process(ap_start, ap_CS_fsm, exitcond_fu_196_p2, exitcond_reg_375, ap_reg_ppiten_pp0_it0, ap_sig_bdd_102, ap_reg_ppstg_exitcond_reg_375_pp0_it25, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it26, ap_reg_ppstg_exitcond_reg_375_pp0_it1, ap_reg_ppstg_exitcond_reg_375_pp0_it2, ap_reg_ppstg_exitcond_reg_375_pp0_it3, ap_reg_ppstg_exitcond_reg_375_pp0_it4)
    begin
        if ((((ap_ST_st1_fsm_0 = ap_CS_fsm) and (ap_start = ap_const_logic_0)) or ((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26)) or (not((exitcond_fu_196_p2 = ap_const_lv1_0)) and not((exitcond_reg_375 = ap_const_lv1_0)) and not((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it2)) and not((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it4))))) or (ap_ST_st34_fsm_7 = ap_CS_fsm))) then 
            grp_fu_174_ce <= ap_const_logic_0;
        else 
            grp_fu_174_ce <= ap_const_logic_1;
        end if; 
    end process;


    -- grp_fu_174_p0 assign process. --
    grp_fu_174_p0_assign_proc : process(ap_CS_fsm, xMax_minus_xMin7_fu_191_p1, ap_reg_ppiten_pp0_it0, tmp_s_fu_245_p1)
    begin
        if (((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            grp_fu_174_p0 <= tmp_s_fu_245_p1;
        elsif ((ap_ST_st1_fsm_0 = ap_CS_fsm)) then 
            grp_fu_174_p0 <= xMax_minus_xMin7_fu_191_p1;
        else 
            grp_fu_174_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    idxPixel_1_fu_202_p2 <= std_logic_vector(unsigned(idxPixel_reg_153) + unsigned(ap_const_lv17_1));

    -- inStream_TREADY assign process. --
    inStream_TREADY_assign_proc : process(ap_CS_fsm, exitcond_fu_196_p2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_102, ap_reg_ppstg_exitcond_reg_375_pp0_it25, ap_sig_ioackin_outStream_TREADY, ap_reg_ppiten_pp0_it26)
    begin
        if ((((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_fu_196_p2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_0 = ap_sig_ioackin_outStream_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26))))))) then 
            inStream_TREADY <= ap_const_logic_1;
        else 
            inStream_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    isNeg_fu_288_p3 <= sh_assign_fu_282_p2(8 downto 8);
    loc_V_1_fu_264_p1 <= p_Val2_s_fu_250_p1(23 - 1 downto 0);
    outStream_TDATA <= p_Val2_3_fu_341_p3(30 downto 23);
    outStream_TDEST <= ap_reg_ppstg_tmp_dest_V_reg_409_pp0_it25;
    outStream_TID <= ap_reg_ppstg_tmp_id_V_reg_404_pp0_it25;
    outStream_TKEEP <= ap_reg_ppstg_tmp_keep_V_reg_384_pp0_it25;
    outStream_TLAST <= ap_reg_ppstg_tmp_last_V_reg_399_pp0_it25;
    outStream_TSTRB <= ap_reg_ppstg_tmp_strb_V_reg_389_pp0_it25;
    outStream_TUSER <= ap_reg_ppstg_tmp_user_V_reg_394_pp0_it25;

    -- outStream_TVALID assign process. --
    outStream_TVALID_assign_proc : process(ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_sig_bdd_102, ap_reg_ppstg_exitcond_reg_375_pp0_it25, ap_reg_ppiten_pp0_it26, ap_reg_ioackin_outStream_TREADY)
    begin
        if ((((ap_ST_pp0_stg0_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_375_pp0_it25) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_102)) and (ap_const_logic_0 = ap_reg_ioackin_outStream_TREADY)))) then 
            outStream_TVALID <= ap_const_logic_1;
        else 
            outStream_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_s_fu_268_p3 <= (ap_const_lv1_1 & loc_V_1_reg_435);
    p_Val2_3_fu_341_p3 <= 
        tmp_3_i_i_cast_fu_331_p1 when (isNeg_fu_288_p3(0) = '1') else 
        tmp_5_i_i_fu_335_p2;
    p_Val2_s_fu_250_p1 <= grp_fu_165_p2;
    
    tmp_1_i_i_fu_296_p2_temp <= signed(tmp_1_i_i_fu_296_p2);
    sh_assign_1_fu_305_p1 <= std_logic_vector(resize(tmp_1_i_i_fu_296_p2_temp,9));

    sh_assign_1_fu_305_p3 <= 
        sh_assign_1_fu_305_p1 when (isNeg_fu_288_p3(0) = '1') else 
        sh_assign_fu_282_p2;
    sh_assign_fu_282_p2 <= std_logic_vector(unsigned(tmp_i_i_i_cast1_fu_279_p1) + unsigned(ap_const_lv9_181));
    tmp_1_cast_fu_181_p1 <= std_logic_vector(resize(unsigned(xMax),9));
    tmp_1_i_i_fu_296_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_reg_429));
    tmp_2_fu_185_p2 <= std_logic_vector(unsigned(tmp_1_cast_fu_181_p1) - unsigned(tmp_cast_fu_177_p1));
    
    sh_assign_1_fu_305_p3_temp <= signed(sh_assign_1_fu_305_p3);
    tmp_2_i_i_fu_321_p0 <= std_logic_vector(resize(sh_assign_1_fu_305_p3_temp,32));

    tmp_2_i_i_fu_321_p1 <= std_logic_vector(resize(unsigned(tmp_2_i_i_fu_321_p0),54));
    tmp_3_i_i_cast_fu_331_p1 <= std_logic_vector(resize(unsigned(tmp_3_i_i_fu_325_p2),54));
    
    sh_assign_1_fu_305_p3_temp <= signed(sh_assign_1_fu_305_p3);
    tmp_3_i_i_fu_325_p1 <= std_logic_vector(resize(sh_assign_1_fu_305_p3_temp,24));

    tmp_3_i_i_fu_325_p2 <= std_logic_vector(shift_right(unsigned(p_Result_s_fu_268_p3),to_integer(unsigned('0' & tmp_3_i_i_fu_325_p1(24-1 downto 0)))));
    tmp_4_cast_fu_236_p1 <= std_logic_vector(resize(unsigned(inStream_TDATA),9));
    tmp_5_fu_240_p2 <= std_logic_vector(unsigned(tmp_4_cast_fu_236_p1) - unsigned(tmp_cast_reg_360));
    tmp_5_i_i_fu_335_p2 <= std_logic_vector(shift_left(unsigned(tmp_i_i_fu_275_p1),to_integer(unsigned('0' & tmp_2_i_i_fu_321_p1(31-1 downto 0)))));
    tmp_cast_fu_177_p1 <= std_logic_vector(resize(unsigned(xMin),9));
    tmp_i_i_fu_275_p1 <= std_logic_vector(resize(unsigned(p_Result_s_fu_268_p3),54));
    tmp_i_i_i_cast1_fu_279_p1 <= std_logic_vector(resize(unsigned(loc_V_reg_429),9));
    
    tmp_5_fu_240_p2_temp <= signed(tmp_5_fu_240_p2);
    tmp_s_fu_245_p1 <= std_logic_vector(resize(tmp_5_fu_240_p2_temp,32));

    
    tmp_2_fu_185_p2_temp <= signed(tmp_2_fu_185_p2);
    xMax_minus_xMin7_fu_191_p1 <= std_logic_vector(resize(tmp_2_fu_185_p2_temp,32));

end behav;
